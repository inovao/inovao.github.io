var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e, t) {
	"object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.EasyGoogleMaps = t() : e.EasyGoogleMaps = t();
}(this, function () {
	return function (e) {
		function t(n) {
			if (i[n]) return i[n].exports;var o = i[n] = { exports: {}, id: n, loaded: !1 };return e[n].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
		}var i = {};return t.m = e, t.c = i, t.p = "", t(0);
	}([function (e, t, i) {
		(function (n) {
			"use strict";
			function o(e) {
				return e && e.__esModule ? e : { default: e };
			}function s(e, t) {
				if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
			}Object.defineProperty(t, "__esModule", { value: !0 });var r = function () {
				function e(e, t) {
					for (var i = 0; i < t.length; i++) {
						var n = t[i];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
					}
				}return function (t, i, n) {
					return i && e(t.prototype, i), n && e(t, n), t;
				};
			}(),
			    a = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
				return typeof e === "undefined" ? "undefined" : _typeof(e);
			} : function (e) {
				return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
			},
			    l = i(2),
			    d = o(l),
			    u = i(3),
			    c = o(u);t.default = function () {
				var e = null,
				    t = null,
				    o = { isString: function isString(e) {
						return "string" == typeof e && e.length;
					}, isObj: function isObj(e) {
						return null != e && !Array.isArray(e) && "object" == ("undefined" == typeof e ? "undefined" : a(e));
					}, isArr: function isArr(e) {
						return Array.isArray(e);
					}, isFunc: function isFunc(e) {
						return "function" == typeof e;
					} },
				    l = function () {
					function a(e) {
						s(this, a), this._props = e || {}, this._markers = [], this._infoboxes = [], this._onLoad = [], this._isLoaded = !1, this._temporaryStorage = [], this._defaultWidth = "300px";
					}return r(a, [{ key: "init", value: function value() {
							var n = this,
							    s = this._props;d.default.KEY = s.map.APIKEY, d.default.load(function (r) {
								!function () {
									(function (r) {
										var a = [i(5)];(function (i) {
											if (e = i, n._initMap(), n._isLoaded = !0, t = o.isString(s.infobox.template) ? n._getTemplate() : null, n._onLoad.length && n._onLoad.forEach(function (e) {
												return e();
											}), n._addItems(n._temporaryStorage), n._temporaryStorage = [], n._closeOnMapClick(), s.markers) return o.isObj(s.markers) ? Object.keys(s.markers).length ? void (s.markers && s.markers.url ? !o.isString(s.markers) && o.isString(s.markers.url) && n._loadData(function (e) {
												n._addItems(e);
											}) : s.markers && !s.markers.url && n._addItems(s.markers.items)) : r.error("Data must be a non-empty object!!!") : r.error("Data must be an object!!!");
										}).apply(null, a);
									}).call(this, i(1));
								}();
							});
						} }, { key: "onload", value: function value(e) {
							o.isFunc(e) && this._onLoad.push(e);
						} }, { key: "add", value: function value(e) {
							return o.isObj(e) ? this._isLoaded ? void this._addItem(e) : void this._temporaryStorage.push(e) : o.isArr(e) ? this._isLoaded ? void this._addItems(e) : void (this._temporaryStorage = this._temporaryStorage.concat(e)) : void 0;
						} }, { key: "show", value: function value(e) {
							var t = this,
							    i = e;this._markers.forEach(function (e) {
								if (!i || i && e.id == i) return e.setMap(t._map);
							});
						} }, { key: "hide", value: function value(e) {
							var t = e;this._markers.forEach(function (e) {
								if (!t || t && e.id == t) return e.setMap(null);
							});
						} }, { key: "_initMap", value: function value() {
							var e = this._props;this._container = document.querySelector(e.map.container), this._map = new google.maps.Map(this._container, e.map.options), this.realmap = this._map;
						} }, { key: "_loadData", value: function value(e) {
							var t = this._props,
							    i = this._container.getAttribute(t.markers.url),
							    o = new XMLHttpRequest();o.open("GET", i, !0), o.onload = function () {
								return 200 != o.status ? n.error("ошибочка, data not found") : void e(JSON.parse(o.responseText));
							}, o.send();
						} }, { key: "_getTemplate", value: function value() {
							var e = document.querySelector(this._props.infobox.template).innerHTML;return c.default.templateSettings.varname = "baloon", c.default.template(e);
						} }, { key: "_addItems", value: function value(e) {
							for (var t = 0; t < e.length; t++) {
								this._addItem(e[t]);
							}
						} }, { key: "_addItem", value: function value(e) {
							var i = this,
							    n = e.marker,
							    o = this._createMarker(n);if (this._markers.push(o), t && this._props.infobox) {
								var s = e.content,
								    r = t(s),
								    a = this._createInfoBox(r, o);this._infoboxes.push(a), google.maps.event.addListener(o, "click", function (e) {
									return i._toggleInfobox(a, o);
								}), google.maps.event.addListener(a, "domready", function (e) {
									return i._addEventOnCloseButton(a, o);
								});
							}
						} }, { key: "_closeOnMapClick", value: function value() {
							var e = this;this._props.infobox.onlyOneBox && google.maps.event.addListener(this._map, "click", function (t) {
								e._closeAllInfobox();
							});
						} }, { key: "_addEventOnCloseButton", value: function value(e, t) {
							var i = this,
							    n = this._props,
							    o = e.div_,
							    s = o.querySelectorAll(n.infobox.closeButton);this._setInfoBoxPosition(e, o), Array.prototype.forEach.call(s, function (n) {
								n.addEventListener("click", function (n) {
									n.preventDefault(), i._closeInfobox(e), i._closeMarker(t);
								}, !1);
							});
						} }, { key: "_closeAllInfobox", value: function value() {
							var e = this;this._infoboxes.forEach(function (t) {
								return e._closeInfobox(t);
							}), this._closeMarkers();
						} }, { key: "_closeInfobox", value: function value(e) {
							e.close(), e.isOpen = !1;
						} }, { key: "_openInfobox", value: function value(e, t) {
							e.open(this._map, t), e.isOpen = !0;
						} }, { key: "_toggleInfobox", value: function value(e, t) {
							var i = t.activeIcon;t.defaultIcon;e.isOpen ? (this._closeInfobox(e), i && i.length && this._toggleMarker(t, "defaultIcon")) : (this._props.infobox.onlyOneBox && (this._closeAllInfobox(), this._closeMarkers()), this._openInfobox(e, t), i && i.length && this._toggleMarker(t, "activeIcon"));
						} }, { key: "_createMarker", value: function value(e) {
							var t = e.icon,
							    i = t.size,
							    n = t.centering || { x: 0, y: 0 },
							    o = { url: t.default || "", scaledSize: new google.maps.Size(i.x, i.y), anchor: new google.maps.Point(n.x, n.y) },
							    s = new google.maps.Marker({ map: this._map, position: e.position, defaultIcon: e.icon.default || "", activeIcon: e.icon.active || "", iconSize: i, iconStyles: o, id: e.id });return t.default && s.setIcon(o), s;
						} }, { key: "_closeMarkers", value: function value() {
							var e = this;this._markers.forEach(function (t) {
								return e._closeMarker(t);
							});
						} }, { key: "_closeMarker", value: function value(e) {
							e.setIcon(e.iconStyles);
						} }, { key: "_toggleMarker", value: function value(e, t) {
							var i = JSON.parse(JSON.stringify(e.iconStyles));i.url = e[t], e.setIcon(i);
						} }, { key: "_createInfoBox", value: function value(t, i) {
							var n = this._props.infobox,
							    o = n.style || {},
							    s = o.width || this._defaultWidth;o.width = s;var r = i.iconSize;return this._offsetX = r.x, this._offsetY = r.y, new e({ content: t, enableEventPropagation: !1, disableAutoPan: !1, infoBoxClearance: new google.maps.Size(10, 10), boxClass: n.class || "infobox", zIndex: n.zIndex || null, maxWidth: n.maxWidth || 0, boxStyle: o, closeBoxURL: "", pane: "floatPane", isOpen: !1 });
						} }, { key: "_setInfoBoxPosition", value: function value(e, t) {
							var i = this._props.infobox,
							    n = t.offsetWidth,
							    o = t.offsetHeight,
							    s = i.position || {},
							    r = s.x || "top",
							    a = s.y || "center";this._positionX = this._getInfoBoxPositionX(r, n, this._offsetX), this._positionY = this._getInfoBoxPositionY(a, o, this._offsetY), e.setOptions({ pixelOffset: new google.maps.Size(this._positionX, this._positionY.offset), alignBottom: this._positionY.align });
						} }, { key: "_getInfoBoxPositionY", value: function value(e, t, i) {
							switch (e) {case "top":
									return { offset: -i, align: !0 };case "center":
									return { offset: -t / 2 - i / 2, align: !1 };}return { offset: 0, align: !1 };
						} }, { key: "_getInfoBoxPositionX", value: function value(e, t, i) {
							switch (e) {case "left":
									return -t - i / 2;case "right":
									return i / 2;}return -t / 2 - i / 2;
						} }]), a;
				}();return l;
			}(), e.exports = t.default;
		}).call(t, i(1));
	}, function (e, t) {}, function (e, t, i) {
		var n, o;!function (s, r) {
			if (null === s) throw new Error("Google-maps package can be used only in browser");n = r, o = "function" == typeof n ? n.call(t, i, t, e) : n, !(void 0 !== o && (e.exports = o));
		}("undefined" != typeof window ? window : null, function () {
			"use strict";
			var e = "3.18",
			    t = null,
			    i = null,
			    n = !1,
			    o = [],
			    s = [],
			    r = null,
			    a = {};a.URL = "https://maps.googleapis.com/maps/api/js", a.KEY = null, a.LIBRARIES = [], a.CLIENT = null, a.CHANNEL = null, a.LANGUAGE = null, a.REGION = null, a.VERSION = e, a.WINDOW_CALLBACK_NAME = "__google_maps_api_provider_initializator__", a._googleMockApiObject = {}, a.load = function (e) {
				null === i ? n === !0 ? e && o.push(e) : (n = !0, window[a.WINDOW_CALLBACK_NAME] = function () {
					l(e);
				}, a.createLoader()) : e && e(i);
			}, a.createLoader = function () {
				t = document.createElement("script"), t.type = "text/javascript", t.src = a.createUrl(), document.body.appendChild(t);
			}, a.isLoaded = function () {
				return null !== i;
			}, a.createUrl = function () {
				var e = a.URL;return e += "?callback=" + a.WINDOW_CALLBACK_NAME, a.KEY && (e += "&key=" + a.KEY), a.LIBRARIES.length > 0 && (e += "&libraries=" + a.LIBRARIES.join(",")), a.CLIENT && (e += "&client=" + a.CLIENT + "&v=" + a.VERSION), a.CHANNEL && (e += "&channel=" + a.CHANNEL), a.LANGUAGE && (e += "&language=" + a.LANGUAGE), a.REGION && (e += "&region=" + a.REGION), e;
			}, a.release = function (l) {
				var d = function d() {
					a.KEY = null, a.LIBRARIES = [], a.CLIENT = null, a.CHANNEL = null, a.LANGUAGE = null, a.REGION = null, a.VERSION = e, i = null, n = !1, o = [], s = [], "undefined" != typeof window.google && delete window.google, "undefined" != typeof window[a.WINDOW_CALLBACK_NAME] && delete window[a.WINDOW_CALLBACK_NAME], null !== r && (a.createLoader = r, r = null), null !== t && (t.parentElement.removeChild(t), t = null), l && l();
				};n ? a.load(function () {
					d();
				}) : d();
			}, a.onLoad = function (e) {
				s.push(e);
			}, a.makeMock = function () {
				r = a.createLoader, a.createLoader = function () {
					window.google = a._googleMockApiObject, window[a.WINDOW_CALLBACK_NAME]();
				};
			};var l = function l(e) {
				var t;for (n = !1, null === i && (i = window.google), t = 0; t < s.length; t++) {
					s[t](i);
				}for (e && e(i), t = 0; t < o.length; t++) {
					o[t](i);
				}o = [];
			};return a;
		});
	}, function (e, t, i) {
		(function (t) {
			function n(e) {
				this.__path = e.path || "./", "/" !== this.__path[this.__path.length - 1] && (this.__path += "/"), this.__destination = e.destination || this.__path, "/" !== this.__destination[this.__destination.length - 1] && (this.__destination += "/"), this.__global = e.global || "window.render", this.__rendermodule = e.rendermodule || {}, this.__settings = e.templateSettings ? s(e.templateSettings, s(l.templateSettings)) : void 0, this.__includes = {};
			}function o(e) {
				for (var t = "", i = 0; i < e.length; i++) {
					t += "itself." + e[i] + "=" + e[i] + ";";
				}return t;
			}function s(e, t) {
				t = t || {};for (var i in e) {
					t[i] = e[i];
				}return t;
			}function r(e) {
				var i = a.readFileSync(e);return i ? i.toString() : void t.log("problems with " + e);
			}var a = i(1),
			    l = e.exports = i(4);l.process = function (e) {
				return new n(e).compileAll();
			}, n.prototype.compileToFile = function (e, t, i) {
				i = i || {};var n,
				    r = e.substring(e.lastIndexOf("/") + 1, e.lastIndexOf(".")),
				    d = s(this.__includes, s(i)),
				    u = this.__settings || l.templateSettings,
				    c = s(u),
				    p = l.template(t, u, d),
				    h = [],
				    f = "";for (var _ in d) {
					d[_] !== i[_] && d[_] !== this.__includes[_] && (n = void 0, "string" == typeof d[_] ? n = l.template(d[_], u, d) : "function" == typeof d[_] ? n = d[_] : d[_].arg && (c.varname = d[_].arg, n = l.template(d[_].text, c, d)), n && (f += n.toString().replace("anonymous", _), h.push(_)));
				}f += p.toString().replace("anonymous", r), a.writeFileSync(e, "(function(){" + f + "var itself=" + r + ", _encodeHTML=(" + l.encodeHTMLSource.toString() + "(" + (u.doNotSkipEncoded || "") + "));" + o(h) + "if(typeof module!=='undefined' && module.exports) module.exports=itself;else if(typeof define==='function')define(function(){return itself;});else {" + this.__global + "=" + this.__global + "||{};" + this.__global + "['" + r + "']=itself;}}());");
			}, n.prototype.compilePath = function (e) {
				var t = r(e);if (t) return l.template(t, this.__settings || l.templateSettings, s(this.__includes));
			}, n.prototype.compileAll = function () {
				l.log && t.log("Compiling all doT templates...");var e,
				    i,
				    n,
				    o = this.__path,
				    s = a.readdirSync(o);for (e = 0, i = s.length; e < i; e++) {
					n = s[e], /\.def(\.dot|\.jst)?$/.test(n) && (l.log && t.log("Loaded def " + n), this.__includes[n.substring(0, n.indexOf("."))] = r(o + n));
				}for (e = 0, i = s.length; e < i; e++) {
					n = s[e], /\.dot(\.def|\.jst)?$/.test(n) && (l.log && t.log("Compiling " + n + " to function"), this.__rendermodule[n.substring(0, n.indexOf("."))] = this.compilePath(o + n)), /\.jst(\.dot|\.def)?$/.test(n) && (l.log && t.log("Compiling " + n + " to file"), this.compileToFile(this.__destination + n.substring(0, n.indexOf(".")) + ".js", r(o + n)));
				}return this.__rendermodule;
			};
		}).call(t, i(1));
	}, function (e, t, i) {
		var n;(function (o) {
			!function () {
				"use strict";
				function s(e, t, i) {
					return ("string" == typeof t ? t : t.toString()).replace(e.define || u, function (t, n, o, s) {
						return 0 === n.indexOf("def.") && (n = n.substring(4)), n in i || (":" === o ? (e.defineParams && s.replace(e.defineParams, function (e, t, o) {
							i[n] = { arg: t, text: o };
						}), n in i || (i[n] = s)) : new Function("def", "def['" + n + "']=" + s)(i)), "";
					}).replace(e.use || u, function (t, n) {
						e.useParams && (n = n.replace(e.useParams, function (e, t, n, o) {
							if (i[n] && i[n].arg && o) {
								var s = (n + ":" + o).replace(/'|\\/g, "_");return i.__exp = i.__exp || {}, i.__exp[s] = i[n].text.replace(new RegExp("(^|[^\\w$])" + i[n].arg + "([^\\w$])", "g"), "$1" + o + "$2"), t + "def.__exp['" + s + "']";
							}
						}));var o = new Function("def", "return " + n)(i);return o ? s(e, o, i) : o;
					});
				}function r(e) {
					return e.replace(/\\('|\\)/g, "$1").replace(/[\r\t\n]/g, " ");
				}var a,
				    l = { version: "1.1.1", templateSettings: { evaluate: /\{\{([\s\S]+?(\}?)+)\}\}/g, interpolate: /\{\{=([\s\S]+?)\}\}/g, encode: /\{\{!([\s\S]+?)\}\}/g, use: /\{\{#([\s\S]+?)\}\}/g, useParams: /(^|[^\w$])def(?:\.|\[[\'\"])([\w$\.]+)(?:[\'\"]\])?\s*\:\s*([\w$\.]+|\"[^\"]+\"|\'[^\']+\'|\{[^\}]+\})/g, define: /\{\{##\s*([\w\.$]+)\s*(\:|=)([\s\S]+?)#\}\}/g, defineParams: /^\s*([\w$]+):([\s\S]+)/, conditional: /\{\{\?(\?)?\s*([\s\S]*?)\s*\}\}/g, iterate: /\{\{~\s*(?:\}\}|([\s\S]+?)\s*\:\s*([\w$]+)\s*(?:\:\s*([\w$]+))?\s*\}\})/g, varname: "it", strip: !0, append: !0, selfcontained: !1, doNotSkipEncoded: !1 }, template: void 0, compile: void 0, log: !0 };l.encodeHTMLSource = function (e) {
					var t = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
					    i = e ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;return function (e) {
						return e ? e.toString().replace(i, function (e) {
							return t[e] || e;
						}) : "";
					};
				}, a = function () {
					return this || (0, eval)("this");
				}(), "undefined" != typeof e && e.exports ? e.exports = l : (n = function () {
					return l;
				}.call(t, i, t, e), !(void 0 !== n && (e.exports = n)));var d = { append: { start: "'+(", end: ")+'", startencode: "'+encodeHTML(" }, split: { start: "';out+=(", end: ");out+='", startencode: "';out+=encodeHTML(" } },
				    u = /$^/;l.template = function (e, t, i) {
					t = t || l.templateSettings;var n,
					    c,
					    p = t.append ? d.append : d.split,
					    h = 0,
					    f = t.use || t.define ? s(t, e, i || {}) : e;f = ("var out='" + (t.strip ? f.replace(/(^|\r|\n)\t* +| +\t*(\r|\n|$)/g, " ").replace(/\r|\n|\t|\/\*[\s\S]*?\*\//g, "") : f).replace(/'|\\/g, "\\$&").replace(t.interpolate || u, function (e, t) {
						return p.start + r(t) + p.end;
					}).replace(t.encode || u, function (e, t) {
						return n = !0, p.startencode + r(t) + p.end;
					}).replace(t.conditional || u, function (e, t, i) {
						return t ? i ? "';}else if(" + r(i) + "){out+='" : "';}else{out+='" : i ? "';if(" + r(i) + "){out+='" : "';}out+='";
					}).replace(t.iterate || u, function (e, t, i, n) {
						return t ? (h += 1, c = n || "i" + h, t = r(t), "';var arr" + h + "=" + t + ";if(arr" + h + "){var " + i + "," + c + "=-1,l" + h + "=arr" + h + ".length-1;while(" + c + "<l" + h + "){" + i + "=arr" + h + "[" + c + "+=1];out+='") : "';} } out+='";
					}).replace(t.evaluate || u, function (e, t) {
						return "';" + r(t) + "out+='";
					}) + "';return out;").replace(/\n/g, "\\n").replace(/\t/g, "\\t").replace(/\r/g, "\\r").replace(/(\s|;|\}|^|\{)out\+='';/g, "$1").replace(/\+''/g, ""), n && (t.selfcontained || !a || a._encodeHTML || (a._encodeHTML = l.encodeHTMLSource(t.doNotSkipEncoded)), f = "var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (" + l.encodeHTMLSource.toString() + "(" + (t.doNotSkipEncoded || "") + "));" + f);try {
						return new Function(t.varname, f);
					} catch (e) {
						throw "undefined" != typeof o && o.log("Could not create a template function: " + f), e;
					}
				}, l.compile = function (e, t) {
					return l.template(e, null, t);
				};
			}();
		}).call(t, i(1));
	}, function (e, t) {
		/*!
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *       http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
		function i(e) {
			e = e || {}, google.maps.OverlayView.apply(this, arguments), this.content_ = e.content || "", this.disableAutoPan_ = e.disableAutoPan || !1, this.maxWidth_ = e.maxWidth || 0, this.pixelOffset_ = e.pixelOffset || new google.maps.Size(0, 0), this.position_ = e.position || new google.maps.LatLng(0, 0), this.zIndex_ = e.zIndex || null, this.boxClass_ = e.boxClass || "infoBox", this.boxStyle_ = e.boxStyle || {}, this.closeBoxMargin_ = e.closeBoxMargin || "2px", this.closeBoxURL_ = e.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif", "" === e.closeBoxURL && (this.closeBoxURL_ = ""), this.infoBoxClearance_ = e.infoBoxClearance || new google.maps.Size(1, 1), "undefined" == typeof e.visible && ("undefined" == typeof e.isHidden ? e.visible = !0 : e.visible = !e.isHidden), this.isHidden_ = !e.visible, this.alignBottom_ = e.alignBottom || !1, this.pane_ = e.pane || "floatPane", this.enableEventPropagation_ = e.enableEventPropagation || !1, this.div_ = null, this.closeListener_ = null, this.moveListener_ = null, this.mapListener_ = null, this.contextListener_ = null, this.eventListeners_ = null, this.fixedWidthSet_ = null;
		}i.prototype = new google.maps.OverlayView(), i.prototype.createInfoBoxDiv_ = function () {
			var e,
			    t,
			    i,
			    n = this,
			    o = function o(e) {
				e.cancelBubble = !0, e.stopPropagation && e.stopPropagation();
			},
			    s = function s(e) {
				e.returnValue = !1, e.preventDefault && e.preventDefault(), n.enableEventPropagation_ || o(e);
			};if (!this.div_) {
				if (this.div_ = document.createElement("div"), this.setBoxStyle_(), "undefined" == typeof this.content_.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + this.content_ : (this.div_.innerHTML = this.getCloseBoxImg_(), this.div_.appendChild(this.content_)), this.getPanes()[this.pane_].appendChild(this.div_), this.addClickHandler_(), this.div_.style.width ? this.fixedWidthSet_ = !0 : 0 !== this.maxWidth_ && this.div_.offsetWidth > this.maxWidth_ ? (this.div_.style.width = this.maxWidth_, this.fixedWidthSet_ = !0) : (i = this.getBoxWidths_(), this.div_.style.width = this.div_.offsetWidth - i.left - i.right + "px", this.fixedWidthSet_ = !1), this.panBox_(this.disableAutoPan_), !this.enableEventPropagation_) {
					for (this.eventListeners_ = [], t = ["mousedown", "mouseover", "mouseout", "mouseup", "click", "dblclick", "touchstart", "touchend", "touchmove"], e = 0; e < t.length; e++) {
						this.eventListeners_.push(google.maps.event.addDomListener(this.div_, t[e], o));
					}this.eventListeners_.push(google.maps.event.addDomListener(this.div_, "mouseover", function (e) {
						this.style.cursor = "default";
					}));
				}this.contextListener_ = google.maps.event.addDomListener(this.div_, "contextmenu", s), google.maps.event.trigger(this, "domready");
			}
		}, i.prototype.getCloseBoxImg_ = function () {
			var e = "";return "" !== this.closeBoxURL_ && (e = "<img", e += " src='" + this.closeBoxURL_ + "'", e += " align=right", e += " style='", e += " position: relative;", e += " cursor: pointer;", e += " margin: " + this.closeBoxMargin_ + ";", e += "'>"), e;
		}, i.prototype.addClickHandler_ = function () {
			var e;"" !== this.closeBoxURL_ ? (e = this.div_.firstChild, this.closeListener_ = google.maps.event.addDomListener(e, "click", this.getCloseClickHandler_())) : this.closeListener_ = null;
		}, i.prototype.getCloseClickHandler_ = function () {
			var e = this;return function (t) {
				t.cancelBubble = !0, t.stopPropagation && t.stopPropagation(), google.maps.event.trigger(e, "closeclick"), e.close();
			};
		}, i.prototype.panBox_ = function (e) {
			var t,
			    i,
			    n = 0,
			    o = 0;if (!e && (t = this.getMap(), t instanceof google.maps.Map)) {
				t.getBounds().contains(this.position_) || t.setCenter(this.position_), i = t.getBounds();var s = t.getDiv(),
				    r = s.offsetWidth,
				    a = s.offsetHeight,
				    l = this.pixelOffset_.width,
				    d = this.pixelOffset_.height,
				    u = this.div_.offsetWidth,
				    c = this.div_.offsetHeight,
				    p = this.infoBoxClearance_.width,
				    h = this.infoBoxClearance_.height,
				    f = this.getProjection().fromLatLngToContainerPixel(this.position_);if (f.x < -l + p ? n = f.x + l - p : f.x + u + l + p > r && (n = f.x + u + l + p - r), this.alignBottom_ ? f.y < -d + h + c ? o = f.y + d - h - c : f.y + d + h > a && (o = f.y + d + h - a) : f.y < -d + h ? o = f.y + d - h : f.y + c + d + h > a && (o = f.y + c + d + h - a), 0 !== n || 0 !== o) {
					t.getCenter();t.panBy(n, o);
				}
			}
		}, i.prototype.setBoxStyle_ = function () {
			var e, t;if (this.div_) {
				this.div_.className = this.boxClass_, this.div_.style.cssText = "", t = this.boxStyle_;for (e in t) {
					t.hasOwnProperty(e) && (this.div_.style[e] = t[e]);
				}this.div_.style.WebkitTransform = "translateZ(0)", "undefined" != typeof this.div_.style.opacity && "" !== this.div_.style.opacity && (this.div_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + 100 * this.div_.style.opacity + ')"', this.div_.style.filter = "alpha(opacity=" + 100 * this.div_.style.opacity + ")"), this.div_.style.position = "absolute", this.div_.style.visibility = "hidden", null !== this.zIndex_ && (this.div_.style.zIndex = this.zIndex_), this.div_.style.overflow || (this.div_.style.overflow = "auto");
			}
		}, i.prototype.getBoxWidths_ = function () {
			var e,
			    t = { top: 0, bottom: 0, left: 0, right: 0 },
			    i = this.div_;return document.defaultView && document.defaultView.getComputedStyle ? (e = i.ownerDocument.defaultView.getComputedStyle(i, ""), e && (t.top = parseInt(e.borderTopWidth, 10) || 0, t.bottom = parseInt(e.borderBottomWidth, 10) || 0, t.left = parseInt(e.borderLeftWidth, 10) || 0, t.right = parseInt(e.borderRightWidth, 10) || 0)) : document.documentElement.currentStyle && i.currentStyle && (t.top = parseInt(i.currentStyle.borderTopWidth, 10) || 0, t.bottom = parseInt(i.currentStyle.borderBottomWidth, 10) || 0, t.left = parseInt(i.currentStyle.borderLeftWidth, 10) || 0, t.right = parseInt(i.currentStyle.borderRightWidth, 10) || 0), t;
		}, i.prototype.onRemove = function () {
			this.div_ && (this.div_.parentNode.removeChild(this.div_), this.div_ = null);
		}, i.prototype.draw = function () {
			this.createInfoBoxDiv_();var e = this.getProjection().fromLatLngToDivPixel(this.position_);this.div_.style.left = e.x + this.pixelOffset_.width + "px", this.alignBottom_ ? this.div_.style.bottom = -(e.y + this.pixelOffset_.height) + "px" : this.div_.style.top = e.y + this.pixelOffset_.height + "px", this.isHidden_ ? this.div_.style.visibility = "hidden" : this.div_.style.visibility = "visible";
		}, i.prototype.setOptions = function (e) {
			"undefined" != typeof e.boxClass && (this.boxClass_ = e.boxClass, this.setBoxStyle_()), "undefined" != typeof e.boxStyle && (this.boxStyle_ = e.boxStyle, this.setBoxStyle_()), "undefined" != typeof e.content && this.setContent(e.content), "undefined" != typeof e.disableAutoPan && (this.disableAutoPan_ = e.disableAutoPan), "undefined" != typeof e.maxWidth && (this.maxWidth_ = e.maxWidth), "undefined" != typeof e.pixelOffset && (this.pixelOffset_ = e.pixelOffset), "undefined" != typeof e.alignBottom && (this.alignBottom_ = e.alignBottom), "undefined" != typeof e.position && this.setPosition(e.position), "undefined" != typeof e.zIndex && this.setZIndex(e.zIndex), "undefined" != typeof e.closeBoxMargin && (this.closeBoxMargin_ = e.closeBoxMargin), "undefined" != typeof e.closeBoxURL && (this.closeBoxURL_ = e.closeBoxURL), "undefined" != typeof e.infoBoxClearance && (this.infoBoxClearance_ = e.infoBoxClearance), "undefined" != typeof e.isHidden && (this.isHidden_ = e.isHidden), "undefined" != typeof e.visible && (this.isHidden_ = !e.visible), "undefined" != typeof e.enableEventPropagation && (this.enableEventPropagation_ = e.enableEventPropagation), this.div_ && this.draw();
		}, i.prototype.setContent = function (e) {
			this.content_ = e, this.div_ && (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), this.closeListener_ = null), this.fixedWidthSet_ || (this.div_.style.width = ""), "undefined" == typeof e.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + e : (this.div_.innerHTML = this.getCloseBoxImg_(), this.div_.appendChild(e)), this.fixedWidthSet_ || (this.div_.style.width = this.div_.offsetWidth + "px", "undefined" == typeof e.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + e : (this.div_.innerHTML = this.getCloseBoxImg_(), this.div_.appendChild(e))), this.addClickHandler_()), google.maps.event.trigger(this, "content_changed");
		}, i.prototype.setPosition = function (e) {
			this.position_ = e, this.div_ && this.draw(), google.maps.event.trigger(this, "position_changed");
		}, i.prototype.setZIndex = function (e) {
			this.zIndex_ = e, this.div_ && (this.div_.style.zIndex = e), google.maps.event.trigger(this, "zindex_changed");
		}, i.prototype.setVisible = function (e) {
			this.isHidden_ = !e, this.div_ && (this.div_.style.visibility = this.isHidden_ ? "hidden" : "visible");
		}, i.prototype.getContent = function () {
			return this.content_;
		}, i.prototype.getPosition = function () {
			return this.position_;
		}, i.prototype.getZIndex = function () {
			return this.zIndex_;
		}, i.prototype.getVisible = function () {
			var e;return e = "undefined" != typeof this.getMap() && null !== this.getMap() && !this.isHidden_;
		}, i.prototype.show = function () {
			this.isHidden_ = !1, this.div_ && (this.div_.style.visibility = "visible");
		}, i.prototype.hide = function () {
			this.isHidden_ = !0, this.div_ && (this.div_.style.visibility = "hidden");
		}, i.prototype.open = function (e, t) {
			var i = this;t && (this.position_ = t.getPosition(), this.moveListener_ = google.maps.event.addListener(t, "position_changed", function () {
				i.setPosition(this.getPosition());
			}), this.mapListener_ = google.maps.event.addListener(t, "map_changed", function () {
				i.setMap(this.map);
			})), this.setMap(e), this.div_ && this.panBox_();
		}, i.prototype.close = function () {
			var e;if (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), this.closeListener_ = null), this.eventListeners_) {
				for (e = 0; e < this.eventListeners_.length; e++) {
					google.maps.event.removeListener(this.eventListeners_[e]);
				}this.eventListeners_ = null;
			}this.moveListener_ && (google.maps.event.removeListener(this.moveListener_), this.moveListener_ = null), this.mapListener_ && (google.maps.event.removeListener(this.mapListener_), this.mapListener_ = null), this.contextListener_ && (google.maps.event.removeListener(this.contextListener_), this.contextListener_ = null), this.setMap(null);
		}, e.exports = i;
	}]);
});